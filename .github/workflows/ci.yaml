################################################################################
#      Copyright (C) 2020        Sebastian Francisco Colomar Bauza             #
#      SPDX-License-Identifier:  GPL-2.0-only                                  #
################################################################################
name: CI                                                                       #
on:                                                                            #
  push:                                                                        #
    branches:                                                                  #
    - main                                                                     #
jobs:                                                                          #
  host:                                                                          #
    runs-on: ubuntu-latest                                                      #
    steps:                                                                     #
    - name: checkout                                                           #
      uses: actions/checkout@v2                                                #
    - name: os-release
      run: cat /etc/os-release
    - name: run                                                                #
      run: php -f main/src/index.php -S 0.0.0.0:8080                                &
    - name: which
      run: which wget && which curl
    - name: cat
      run: cat main/src/index.php
    - name: test                                                               #
      run:                                                                     |
        while true                                                             ;
          do                                                                   \
            sleep 10                                                           ;
            wget -q -O - localhost:8080/main/src/index.php | grep "PHP.*phpinfo()" && break ;
          done                                                                 ;
  docker:                                                                          #
    runs-on: ubuntu-latest                                                      #
    steps:                                                                     #
    - name: checkout                                                           #
      uses: actions/checkout@v2                                                #
    - name: docker-build                                                                #
      run:                                                                     |
        mkdir --parents build-context/
        docker build --file main/Dockerfile --tag localhost/library/my_image:test build-context/
    - name: docker-run
      run: docker run --cpus 0.01 --detach --memory 10M --memory-reservation 10M --name phpinfo --publish 80:8080 --read-only --restart always --user nobody:nogroup --volume ${PWD}/main/src/index.php:/src/index.php:ro --workdir /src/ localhost/library/my_image:test php -f index.php -S 0.0.0.0:8080
    - name: test                                                               #
      run:                                                                     |
        while true                                                             ;
          do                                                                   \
            sleep 10                                                           ;
            docker logs phpinfo 2>& 1 | grep "PHP.*started" && break ;
          done                                                                 ;
  docker-compose:                                                                          #
    runs-on: ubuntu-latest                                                      #
    steps:                                                                     #
    - name: checkout                                                           #
      uses: actions/checkout@v2                                                #
    - name: install
      run: sudo apt-get update && sudo apt-get install -y docker-compose
    - name: docker-compose
      run: docker-compose --file main/docker-compose.yaml up &
    - name: test                                                               #
      run:                                                                     |
        while true                                                             ;
          do                                                                   \
            sleep 10                                                           ;
            docker-compose --file main/docker-compose.yaml logs 2>& 1 | grep "PHP.*started" && break ;
          done           
  swarm-config:                                                                          #
    runs-on: ubuntu-latest                                                      #
    steps:                                                                     #
    - name: checkout                                                           #
      uses: actions/checkout@v2                                                #
    - name: docker-swarm                                                                #
      run: docker swarm init
    - name: docker-stack
      run: cd main && docker stack deploy --compose-file docker-stack-config.yaml phpinfo
    - name: test                                                               #
      run:                                                                     |
        while true                                                             ;
          do                                                                   \
            sleep 10                                                           ;
            docker service logs phpinfo_phpinfo 2>& 1 | grep "PHP.*started" && break ;
          done           
  swarm-secret:                                                                          #
    runs-on: ubuntu-latest                                                      #
    steps:                                                                     #
    - name: checkout                                                           #
      uses: actions/checkout@v2                                                #
    - name: docker-swarm                                                                #
      run: docker swarm init
    - name: docker-stack
      run: cd main && docker stack deploy --compose-file docker-stack-secret.yaml phpinfo
    - name: test                                                               #
      run:                                                                     |
        while true                                                             ;
          do                                                                   \
            sleep 10                                                           ;
            docker service logs phpinfo_phpinfo 2>& 1 | grep "PHP.*started" && break ;
          done           
  swarm-volume:                                                                          #
    runs-on: ubuntu-latest                                                      #
    steps:                                                                     #
    - name: checkout                                                           #
      uses: actions/checkout@v2                                                #
    - name: docker-swarm                                                                #
      run: docker swarm init
    - name: docker-stack
      run: cd main && docker stack deploy --compose-file docker-stack-volume.yaml phpinfo
    - name: test                                                               #
      run:                                                                     |
        while true                                                             ;
          do                                                                   \
            sleep 10                                                           ;
            docker service logs phpinfo_phpinfo 2>& 1 | grep "PHP.*started" && break ;
          done           
  kubernetes:                                                                  #
    runs-on: ubuntu-latest                                                      #
    steps:                                                                     #
    - name: checkout                                                           #
      uses: actions/checkout@v2                                                #
    - name: minikube
      run: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb
        sudo apt-get install ./minikube_latest_amd64.deb
    - name: init
      run: minikube start --driver=docker
    - name: kubectl
      run: |
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates curl gnupg
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        sudo chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
        sudo chmod 644 /etc/apt/sources.list.d/kubernetes.list
        sudo apt-get update
        sudo apt-get install -y kubectl        
    - name: apply                                                              #
      run: kubectl apply -f main/kubernetes/manifests/                                  ;
    - name: test                                                               #
      run:                                                                     |
        set -x                                                                 ;
        kubectl get po -A
        kubectl get svc -A
        kubectl get no
        while true                                                             ;
          do                                                                   \
            sleep 10                                                           ;
            kubectl exec phpinfo-po -- wget -q -O - localhost:8080 | grep "PHP.*phpinfo()" && break
          done                                                                 ;
        kubectl get all
################################################################################
